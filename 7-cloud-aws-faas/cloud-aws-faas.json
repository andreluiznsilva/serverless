{
    "Description": "Cloud Formation for Aws FAAS",
    "Parameters": {
        "Project": {
            "Type": "String",
            "Description": "Project Name",
            "MinLength": "3",
            "MaxLength": "14",
            "AllowedPattern": "[a-z0-3\\-]*",
            "Default": "iaas"
        },
        "Environment": {
            "Type": "String",
            "Description": "Environment",
            "Default": "tst"
        }
    },
    "Mappings": {
        "AWSNATAMIs": {
            "us-east-1": {
                "AMI": "ami-303b1458"
            },
            "us-west-2": {
                "AMI": "ami-69ae8259"
            },
            "us-west-1": {
                "AMI": "ami-7da94839"
            },
            "eu-west-1": {
                "AMI": "ami-6975eb1e"
            },
            "eu-central-1": {
                "AMI": "ami-46073a5b"
            },
            "ap-southeast-1": {
                "AMI": "ami-b49dace6"
            },
            "ap-northeast-1": {
                "AMI": "ami-03cf3903"
            },
            "ap-southeast-2": {
                "AMI": "ami-e7ee9edd"
            },
            "sa-east-1": {
                "AMI": "ami-fbfa41e6"
            }
        },
        "AWSLinuxAMIs": {
            "us-east-1": {
                "AMI": "ami-1ecae776"
            },
            "us-west-2": {
                "AMI": "ami-e7527ed7"
            },
            "us-west-1": {
                "AMI": "ami-d114f295"
            },
            "eu-west-1": {
                "AMI": "ami-a10897d6"
            },
            "eu-central-1": {
                "AMI": "ami-a8221fb5"
            },
            "ap-northeast-1": {
                "AMI": "ami-cbf90ecb"
            },
            "ap-southeast-1": {
                "AMI": "ami-68d8e93a"
            },
            "ap-southeast-2": {
                "AMI": "ami-fd9cecc7"
            },
            "sa-east-1": {
                "AMI": "ami-b52890a8"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "-vpc"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "internet-gateway"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AttachGatewayToVPC": {
            "DependsOn": [
                "InternetGateway",
                "VPC"
            ],
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": "us-east-1a",
                "CidrBlock": "10.0.0.0/24",
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "public-subnet"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "GenericNACL": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "generic-nacl"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "NACLInboundEntry": {
            "DependsOn": [
                "GenericNACL"
            ],
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": false,
                "NetworkAclId": {
                    "Ref": "GenericNACL"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": 100
            }
        },
        "NACLOutboundEntry": {
            "DependsOn": [
                "GenericNACL"
            ],
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": true,
                "NetworkAclId": {
                    "Ref": "GenericNACL"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": 100
            }
        },
        "BindNACLForPublicSubnet": {
            "DependsOn": [
                "PublicSubnet",
                "GenericNACL"
            ],
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "NetworkAclId": {
                    "Ref": "GenericNACL"
                }
            }
        },
        "RouteTableForPublicSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "public-route-table"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "AttachRouteToInternetGateway": {
            "DependsOn": [
                "InternetGateway",
                "AttachGatewayToVPC",
                "RouteTableForPublicSubnet"
            ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "RouteTableForPublicSubnet"
                },
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "AttachRouteToPublicSubnet": {
            "DependsOn": [
                "RouteTableForPublicSubnet",
                "PublicSubnet"
            ],
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTableForPublicSubnet"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet"
                }
            }
        },
        "LambdaAccessRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess",
                    "arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess",
                    "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                ]
            }
        },
        "TestLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": "TestLambda",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaAccessRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "",
                            [
                                "exports.handler = function(event, context, callback) {\n",
                                "  callback(null, {\n",
                                "statusCode: 200,\n",
                                "body: JSON.stringify(event)\n",
                                "});\n",
                                "};\n"
                            ]
                        ]
                    }
                },
                "Runtime": "nodejs6.10",
                "Timeout": "30",
                "VpcConfig": {
                    "SecurityGroupIds": [
                        {
                            "Ref": "LambdaSecurityGroup"
                        }
                    ],
                    "SubnetIds": [
                        {
                            "Ref": "PublicSubnet"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "lambda-function"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "LambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allows Lambda to hit the RDS",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "IpProtocol": "-1",
                        "ToPort": 65535
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 0,
                        "IpProtocol": "-1",
                        "ToPort": 65535
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "Environment"
                                    },
                                    {
                                        "Ref": "Project"
                                    },
                                    "lambda-to-rds-sg"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "FaasRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Faas API"
            }
        },
        "TestResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "FaasRestApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "FaasRestApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "test"
            }
        },
        "TestIdResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "FaasRestApi"
                },
                "ParentId": {
                    "Ref": "TestResource"
                },
                "PathPart": "{proxy+}"
            }
        },
        "TestResourceANYMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "FaasRestApi"
                },
                "ResourceId": {
                    "Ref": "TestIdResource"
                },
                "HttpMethod": "ANY",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TestLambda.Arn}/invocations"
                    }
                }
            }
        },
        "LambdaInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "TestLambda",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FaasRestApi}/*"
                }
            }
        }
    },
    "Outputs": {}
}